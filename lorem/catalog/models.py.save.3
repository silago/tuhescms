L# -*- coding: utf-8 -*-
from django.db import models
from django.contrib.auth.models import User
from django_thumbs.db.models import ImageWithThumbsField
from autoslug.fields import AutoSlugField
#для миграций превьюшек
from south.modelsinspector import add_introspection_rules
from django.forms import ModelForm
#from myadpp.models import Article



#from lib.thumbs import ImageWithThumbsField
if 1:
    add_introspection_rules([
        (
            [ImageWithThumbsField], # Class(es) these apply to
            [],         # Positional arguments (not used)
            {           # Keyword argument
                "sizes": ["sizes", {}],
            },
        ),
    ], ["^django_thumbs\.db\.models\.ImageWithThumbsField"])



class City(models.Model):
	name = models.CharField(max_length=255,verbose_name=u"Название")
	def __unicode__(self):
		return self.name
	class Meta:
		verbose_name = " Город "
		verbose_name_plural = " Города "

class AdvertismentCategory(models.Model):
	name		=	models.CharField(max_length=255,verbose_name=u"Название")
	alias		=	AutoSlugField(populate_from='name', unique=True,verbose_name=u"Псевдоним")
	owner		=	models.ForeignKey("AdvertismentCategory", verbose_name=u"Родительская категория", blank=True, null=True )
	onleft		=	models.IntegerField(choices = (	(0,"Нет"),(1,"Да") ), verbose_name=u"Отображать слева", null=True)
	sortleft	=	models.ForeignKey("CategoryField", blank=True, null=True)
	#type		=	models.IntegerField(
	def __unicode__(self):
		return self.name	
	class Meta:
		verbose_name = " Категория объявления "
		verbose_name_plural = " Категории объявлений "

class CategoryField(models.Model):
	name		=	models.CharField(max_length=255,verbose_name=u"Имя")
	title		=	models.CharField(max_length=255, blank=True,verbose_name=u"Название")
	category	=	models.ManyToManyField(AdvertismentCategory,verbose_name=u"Категория")
	hidden		=	models.IntegerField(choices = ((0,'Скрыто для отображения'),(1,'Открыто для Отображения')),verbose_name=u"Доступность")
	def __unicode__(self):
		return self.name
	class Meta:
		verbose_name = " Поле категорий "
		verbose_name_plural = " Поля категорий "

class Advertisment(models.Model):
	owner	 	= 	models.ForeignKey(User, verbose_name=u"Владелец")
	city		=	models.ForeignKey(City, verbose_name=u"Город")
	category	=	models.ForeignKey(AdvertismentCategory,  verbose_name=u"Категория" )
	mainPhoto	=	ImageWithThumbsField(upload_to='images', sizes=((125,125),(300,300)), blank=True, verbose_name=u"Фото")
	title		=	models.CharField(max_length=255, verbose_name=u"Заголовок")
	#alias		=	AutoSlugField(populate_from=title)
	text		=	models.TextField(max_length=255,verbose_name=u"Текст")
	price		=	models.CharField(max_length=255,blank = True, verbose_name=u"Вознаграждение")
	typeof		=	models.CharField(max_length=255, choices = (('have','У меня есть'),('need','Я ищу')), verbose_name=u"Тип")
	date		=	models.DateTimeField(auto_now_add = True, verbose_name=u"Дата")
	#rate		=	models.IntegerField(blank=True, default=5, verbose_name=u"Рейтинг")
	status		=	models.IntegerField(choices = ((-1,'Неактивно'),(0,'Не оплачено'),(1,'Оплачено')), default=0, verbose_name=u"Статус")
	def __unicode__(self):
		return self.title
	class Meta:
		verbose_name = " Объявление "
		verbose_name_plural = " Объявления "
    

class AdvertismentImage(models.Model):
	adv			=	models.ForeignKey(Advertisment,)
	image		=	ImageWithThumbsField(upload_to='images', sizes=((125,125),(300,300)))	
	class Meta:
		verbose_name = " Изображение "
		verbose_name_plural = " Изображения "

class AdvertismentFieldValues(models.Model):
	adv			=	models.ForeignKey(Advertisment,verbose_name=u"Объявление")
	field		=	models.ForeignKey(CategoryField,verbose_name=u"Поле")
	value		=	models.CharField(max_length=255,verbose_name=u"Значение")
	def __unicode__(self):
		return unicode(self.adv.title+" . "+self.field.name+' . '+self.value)
	class Meta:
		verbose_name = " Дополнительный параметр объявления "
		verbose_name_plural = " Дополнительные параметры объявдения "

class AdvertismentForm(ModelForm):
	class Meta:
		model	=	Advertisment
		fields	=	['city','category','mainPhoto','title','text','price']
	
	#	return inst
